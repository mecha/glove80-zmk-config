/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2
#define FACTORY_TEST 3

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&to 1>;
        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };

        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "Sticky Key Quick Release";
            bindings = <&kp>;
            #binding-cells = <1>;
            quick-release;
            release-after-ms = <1000>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        engram {
            bindings = <
&kp F1      &kp F2    &kp F3   &kp F4    &kp F5                                                                                                        &kp F6    &kp F7    &kp F8  &kp F9     &kp F10
&kp GRAVE   &kp N1    &kp N2   &kp N3    &kp N4    &kp N5                                                                                   &kp N6     &kp N7    &kp N8    &kp N9  &kp N0     &kp F11
&kp TAB     &kp B     &kp Y    &kp O     &kp U     &kp FSLH                                                                                 &kp EQUAL  &kp D     &kp L     &kp W   &kp V      &kp Z
&kp ESC     &kp C     &kp I    &kp E     &kp A     &kp SEMI                                                                                 &kp MINUS  &kp H     &kp T     &kp S   &kp N      &kp Q
&kp HOME    &kp G     &kp X    &kp J     &kp K     &kp COMMA  &kp BSPC        &kp DEL    &to 1         &kp F12        &kp RCTRL  &kp LGUI   &kp DOT    &kp R     &kp M     &kp F   &kp P      &kp END
&magic 2 0  &kp BSLH  &kp SQT  &kp LBKT  &kp RBKT             &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp RIGHT_ALT  &kp RET    &kp SPACE             &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &mo 1
            >;
        };

        lower_layer {
            bindings = <
&kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV  &kp C_NEXT  &kp C_PP                                                                         &kp C_MUTE      &kp C_VOL_DN    &kp C_VOL_UP     &none  &kp PRINTSCREEN
&trans        &none         &none       &none       &none     &none                                                           &none  &none           &none           &none            &none  &none
&trans        &none         &none       &none       &none     &none                                                           &none  &none           &mmv MOVE_UP    &mkp MB2         &none  &none
&kp CAPSLOCK  &none         &none       &none       &none     &kp PG_UP                                                       &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none  &none
&trans        &none         &none       &none       &none     &kp PG_DN  &trans  &trans  &to 0   &trans  &mkp MB5   &mkp MB4  &none  &none           &none           &none            &none  &trans
&trans        &none         &none       &none       &none                &trans  &trans  &trans  &trans  &mkp MCLK  &mkp MB1         &none           &none           &none            &none  &trans
            >;
        };

        magic_layer {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                            &none  &none  &none  &none  &bt BT_CLR_ALL
&none        &none            &none            &none            &none            &none                                                             &none         &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                   &none         &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                   &out OUT_USB  &bt_0  &bt_1  &bt_2  &bt_3  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none         &none  &none  &none  &none         &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB  &none  &none  &none                &none  &none  &none  &none  &none
            >;
        };
    };
};
